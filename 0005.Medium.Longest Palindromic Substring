Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:
Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.

Example 2:
Input: "cbbd"
Output: "bb"


/*
 * 回文是以中心为镜像的。因此回文可以中心向左右扩展，共有2n-1个中心。
 * 为什么不是n个中心？因为长度为偶数回文的中心可以再两个相邻字母之间。
 */

func longestPalindrome(s string) string {
    if len(s) <= 0 {return ""}
    
    start, end := 0, 0
    for i := 0; i < len(s); i++ {
        len1 := expandAroundCenter(s, i, i)
        len2 := expandAroundCenter(s, i, i+1)
        lenMax := max(len1, len2)
        if lenMax > end - start {
            start = i - (lenMax - 1) / 2
            end = i + lenMax / 2
        }
    }
    
    return s[start : end+1]
}


func expandAroundCenter(s string, left, right int) int {
    L, R := left, right
    for L >= 0 && R < len(s) && s[L] == s[R] {
        L--
        R++
    }
    return R - L - 1
}


func max(x, y int) int {
    if x > y {
        return x
    }
    return y
}
