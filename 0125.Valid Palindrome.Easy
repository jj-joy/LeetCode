0125.Valid Palindrome.Easy

Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:
Input: "A man, a plan, a canal: Panama"
Output: true

Example 2:
Input: "race a car"
Output: false


import (
	"strings"
)

func isPalindrome(s string) bool {
    s = strings.ToLower(s)
    
    head, tail := 0, len(s) - 1
    
    for head < tail {
        for head < tail && !isAlphanumeric(s[head]) {
            head++
        }
        for head < tail && !isAlphanumeric(s[tail]) {
            tail--
        }
        
        if s[head] != s[tail] {
            return false
        }
        
        head++
        tail--
    }
    
    return true
}

func isAlphanumeric(c byte) bool {
    return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
}

