190.Reverse-Bits

Reverse bits of a given 32 bits unsigned integer.

Example 1:
Input: 00000010100101000001111010011100
Output: 00111001011110000010100101000000
Explanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.

Example 2:
Input: 11111111111111111111111111111101
Output: 10111111111111111111111111111111
Explanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10101111110010110010011101101001.

分段相或法
// for 8 bit binary number abcdefgh, the process is as follow:
// abcdefgh -> efghabcd -> ghefcdab -> hgfedcba

func reverseBits(num uint32) uint32 {
    num = ((num & 0xffff0000) >> 16) | ((num & 0x0000ffff) << 16)
    num = ((num & 0xff00ff00) >> 8)  | ((num & 0x00ff00ff) << 8)
    num = ((num & 0xf0f0f0f0) >> 4)  | ((num & 0x0f0f0f0f) << 4)
    num = ((num & 0xcccccccc) >> 2)  | ((num & 0x33333333) << 2)
    num = ((num & 0xaaaaaaaa) >> 1)  | ((num & 0x55555555) << 1)
    return num
}

func reverseBits(num uint32) uint32 {
	var rn uint32 = 0
	for i:=0; i<32; i++ {
        rn = (rn << 1) | (num & 1)
        num >>= 1
	}
	return rn
}
