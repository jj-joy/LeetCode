0102.Binary_Tree_Level_Order_Traversal

Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
    Given binary tree [3,9,20,null,null,15,7],
        3
       / \
      9  20
        /  \
       15   7
    return its level order traversal as:
    [
      [3],
      [9,20],
      [15,7]
    ]


对比 0107.Binary_Tree_Level_Order_Traversal_II

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func levelOrder(root *TreeNode) [][]int {
    traversal := [][]int{}

    var dfs func(*TreeNode, int)
    dfs = func(node *TreeNode, level int) {
        if node == nil {
            return
        }

        if len(traversal) <= level {
            traversal = append(traversal, []int{})
        }

        traversal[level] = append(traversal[level], node.Val)

        dfs(node.Left, level+1)
        dfs(node.Right, level+1)
    }

    dfs(root, 0)

    return traversal
}

