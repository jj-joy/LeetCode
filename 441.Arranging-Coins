441.Arranging-Coins

You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.
Given n, find the total number of full staircase rows that can be formed.
n is a non-negative integer and fits within the range of a 32-bit signed integer.

Example 1:
n = 5
The coins can form the following rows:
¤
¤ ¤
¤ ¤
Because the 3rd row is incomplete, we return 2.

Example 2:
n = 8
The coins can form the following rows:
¤
¤ ¤
¤ ¤ ¤
¤ ¤
Because the 4th row is incomplete, we return 3.


根据等差数列求和公式  (首项+末项）×项数/2 
n = (1 + x) * x / 2

O(lgn)方法，用到了二分搜索法，我们搜索前i行之和刚好大于n的临界点，这样我们减一个就是能排满的行数.

func arrangeCoins(n int) int {
    if n <= 1 {
        return n
    }
    low, high := 1, n
    for low < high {
    	mid := (low + high) / 2
    	if mid * (mid + 1) / 2 <= n {
    		low = mid + 1
    	} else {
    		// 不能mid - 1
    		high = mid
    	}
    }
    return low - 1
}